[{"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\store.js":"2","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Layout.jsx":"4","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\product-modal\\productModalSlice.js":"5","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\shopping-cart\\cartItemsSlide.js":"6","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductViewModal.jsx":"7","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Header.jsx":"8","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Footer.jsx":"9","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\routes\\Routes.jsx":"10","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\products.js":"11","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Button.jsx":"12","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductView.jsx":"13","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Grid.jsx":"14","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Product.jsx":"15","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Catalog.jsx":"16","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Cart.jsx":"17","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Home.jsx":"18","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\numberWithCommas.js":"19","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\category.js":"20","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-color.js":"21","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-size.js":"22","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\policy.js":"23","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\hero-slider.js":"24","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\productApi.js":"25","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Helmet.jsx":"26","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductCard.jsx":"27","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Section.jsx":"28","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CheckBox.jsx":"29","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\InfinityList.jsx":"30","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CartItem.jsx":"31","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\PolicyCard.jsx":"32","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\HeroSlider.jsx":"33","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\axiosClient.js":"34","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\convertColor.js":"35","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-capacity.js":"36","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Pagination.jsx":"37","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IphoneCatalog.jsx":"38","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\WatchCatalog.jsx":"39","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IpadCatalog.jsx":"40","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\watch-category.js":"41","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\ipad-category.js":"42","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Payment.jsx":"43","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\orderBillApi.js":"44"},{"size":916,"mtime":1670744903506,"results":"45","hashOfConfig":"46"},{"size":335,"mtime":1669032299728,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1669032299728,"results":"48","hashOfConfig":"46"},{"size":782,"mtime":1669032299725,"results":"49","hashOfConfig":"46"},{"size":550,"mtime":1669032299727,"results":"50","hashOfConfig":"46"},{"size":3877,"mtime":1671128903418,"results":"51","hashOfConfig":"46"},{"size":1732,"mtime":1671045614698,"results":"52","hashOfConfig":"46"},{"size":3899,"mtime":1671033181045,"results":"53","hashOfConfig":"46"},{"size":4042,"mtime":1670741636560,"results":"54","hashOfConfig":"46"},{"size":890,"mtime":1671092370172,"results":"55","hashOfConfig":"46"},{"size":72791,"mtime":1669032299647,"results":"56","hashOfConfig":"46"},{"size":996,"mtime":1670761081678,"results":"57","hashOfConfig":"46"},{"size":11274,"mtime":1671045442279,"results":"58","hashOfConfig":"46"},{"size":682,"mtime":1669032299724,"results":"59","hashOfConfig":"46"},{"size":3189,"mtime":1671033919871,"results":"60","hashOfConfig":"46"},{"size":8417,"mtime":1670844689894,"results":"61","hashOfConfig":"62"},{"size":4200,"mtime":1671101628644,"results":"63","hashOfConfig":"46"},{"size":8456,"mtime":1670862081307,"results":"64","hashOfConfig":"46"},{"size":121,"mtime":1669032299732,"results":"65","hashOfConfig":"46"},{"size":485,"mtime":1670829696624,"results":"66","hashOfConfig":"46"},{"size":563,"mtime":1670860357909,"results":"67","hashOfConfig":"46"},{"size":331,"mtime":1669032299647,"results":"68","hashOfConfig":"62"},{"size":649,"mtime":1669032299646,"results":"69","hashOfConfig":"46"},{"size":1841,"mtime":1669032299646,"results":"70","hashOfConfig":"62"},{"size":611,"mtime":1670862330943,"results":"71","hashOfConfig":"46"},{"size":392,"mtime":1669280516076,"results":"72","hashOfConfig":"46"},{"size":1826,"mtime":1671038270793,"results":"73","hashOfConfig":"46"},{"size":494,"mtime":1669032299726,"results":"74","hashOfConfig":"46"},{"size":732,"mtime":1669032299724,"results":"75","hashOfConfig":"46"},{"size":2467,"mtime":1670862172259,"results":"76","hashOfConfig":"46"},{"size":3354,"mtime":1671033632702,"results":"77","hashOfConfig":"46"},{"size":795,"mtime":1669032299725,"results":"78","hashOfConfig":"46"},{"size":3483,"mtime":1670762356246,"results":"79","hashOfConfig":"46"},{"size":913,"mtime":1670750866727,"results":"80","hashOfConfig":"46"},{"size":265,"mtime":1670758347762,"results":"81","hashOfConfig":"62"},{"size":322,"mtime":1670829404472,"results":"82","hashOfConfig":"46"},{"size":1837,"mtime":1670841314209,"results":"83","hashOfConfig":"46"},{"size":8205,"mtime":1670860270566,"results":"84","hashOfConfig":"46"},{"size":8208,"mtime":1670859821952,"results":"85","hashOfConfig":"46"},{"size":8260,"mtime":1670860290492,"results":"86","hashOfConfig":"46"},{"size":297,"mtime":1670860755510,"results":"87","hashOfConfig":"46"},{"size":371,"mtime":1670860735501,"results":"88","hashOfConfig":"46"},{"size":11586,"mtime":1671129687261,"results":"89","hashOfConfig":"46"},{"size":236,"mtime":1671126379404,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"146f8z9",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1eaxrp7",{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"94"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"94"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"94"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"94"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\store.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Layout.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\product-modal\\productModalSlice.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\shopping-cart\\cartItemsSlide.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductViewModal.jsx",["231","232"],[],"import React, {useEffect, useState} from 'react';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport ProductView from './ProductView';\n\nimport Button from './Button';\n\nimport {remove} from '../redux/product-modal/productModalSlice';\n\nimport productData from '../assets/fake-data/products';\n\nimport productApi from '../api/productApi';\nimport {useQuery} from 'react-query';\nimport slugify from 'slugify';\n\nconst ProductViewModal = () => {\n    const fetchListData = async () => {\n        const res = await productApi.getListProduct();\n        return res.data;\n    };\n    const listProductQuery = useQuery('lstCartProduct', fetchListData);\n    const [lstProduct, setLstProduct] = useState([]);\n\n    const productSlug = useSelector((state) => state.productModal.value);\n    const dispatch = useDispatch();\n    const [product, setProduct] = useState(undefined);\n\n    useEffect(() => {\n        if (listProductQuery.data) {\n            setLstProduct(listProductQuery.data);\n        }\n    }, [listProductQuery.data]);\n\n    useEffect(() => {\n        if (lstProduct) {\n            let prod = lstProduct.find((e) => e.id === productSlug);\n            setProduct(prod);\n        }\n    }, [productSlug, lstProduct]);\n    return (\n        <div className={`product-view__modal ${product === undefined ? '' : 'active'}`}>\n            <div className='product-view__modal__content'>\n                <ProductView product={product} />\n                <div className='product-view__modal__content__close'>\n                    <Button size='sm' onClick={() => dispatch(remove())}>\n                        đóng\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductViewModal;\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Header.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\routes\\Routes.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\products.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Button.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductView.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Grid.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Product.jsx",["233"],[],"import React, {useEffect, useState} from 'react';\n\nimport Helmet from '../components/Helmet';\nimport Section, {SectionBody, SectionTitle} from '../components/Section';\nimport Grid from '../components/Grid';\nimport ProductCard from '../components/ProductCard';\nimport ProductView from '../components/ProductView';\n\nimport {useQuery} from 'react-query';\nimport productApi from '../api/productApi';\nimport {useParams} from 'react-router-dom';\nimport slugify from 'slugify';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst Product = (props) => {\n    const {id} = useParams();\n    const fetchData = async () => {\n        const res = await productApi.getProductById(id);\n        return res.data;\n    };\n\n    const fetchListData = async () => {\n        const res = await productApi.getListProduct();\n        return res.data;\n    };\n\n    const initProduct = {\n        id: '',\n        code: '',\n        capacity: '',\n        color: '',\n        description: '',\n        shortDescription: '',\n        img: ['iphone-13-blue1', 'iphone-13-blue2'],\n        isShell: '',\n        name: '',\n        price: '',\n        purchasePrice: '',\n        quantity: '',\n        uniId: '',\n    };\n\n    const [product, setProduct] = useState(initProduct);\n    const [relatedProducts, setRelatedProducts] = useState([]);\n    const productQuery = useQuery(`product-${id}`, fetchData);\n    const listProductQuery = useQuery('relatedProduct', fetchListData);\n    useEffect(() => {\n        if (productQuery.data && listProductQuery.data) {\n            setProduct(productQuery.data);\n            setRelatedProducts(listProductQuery.data.slice(-8));\n        } else {\n            setProduct(initProduct);\n            setRelatedProducts([]);\n        }\n    }, [listProductQuery.data, productQuery.data]);\n\n    React.useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [product]);\n    if (productQuery.isLoading) {\n        return <ClipLoader color={'#427782'} />;\n    } else\n        return (\n            <Helmet title={product.shortDescription}>\n                <Section>\n                    <SectionBody>\n                        <ProductView product={product} />\n                    </SectionBody>\n                </Section>\n                <Section>\n                    <SectionTitle>Khám phá thêm</SectionTitle>\n                    <SectionBody>\n                        <Grid col={4} mdCol={2} smCol={1} gap={20}>\n                            {relatedProducts.map((item, index) => (\n                                <ProductCard\n                                    key={index}\n                                    img01={item.img[0]}\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\n                                    name={item.name + ' ' + item.capacity}\n                                    price={Number(item.price)}\n                                    slug={slugify(item.name.toLowerCase())}\n                                    idx={item.id}\n                                />\n                            ))}\n                        </Grid>\n                    </SectionBody>\n                </Section>\n            </Helmet>\n        );\n};\n\nexport default Product;\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Catalog.jsx",["234","235"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Cart.jsx",["236","237"],[],"import React, {useEffect, useState} from 'react';\n\nimport {useSelector} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport Helmet from '../components/Helmet';\nimport CartItem from '../components/CartItem';\nimport Button from '../components/Button';\n\nimport numberWithCommas from '../utils/numberWithCommas';\nimport slugify from 'slugify';\nimport {useQuery} from 'react-query';\nimport productApi from '../api/productApi';\n\nconst Cart = () => {\n    const [products, setProducts] = useState([]);\n    const fetchListData = async () => {\n        const res = await productApi.getListProduct();\n        return res.data;\n    };\n    const listProductQuery = useQuery('lstCartProduct', fetchListData);\n    useEffect(() => {\n        if (listProductQuery.data) {\n            setProducts(listProductQuery.data);\n        } else setProducts([]);\n    }, [listProductQuery.data]);\n    const cartItems = useSelector((state) => state.cartItems.value);\n\n    useEffect(() => {\n        if (products) {\n            if (cartItems && cartItems.length) {\n                const res = cartItems.map((e) => {\n                    let product = products.find((product) => {\n                        if (\n                            slugify(product.name.toLowerCase()) === e.slug &&\n                            product.color === e.color &&\n                            product.capacity.includes(e.capacity)\n                        )\n                            return true;\n                        return false;\n                    });\n                    return {\n                        ...e,\n                        product: product,\n                    };\n                });\n                setCartProducts(res);\n            }\n        }\n    }, [products]);\n\n    const [cartProducts, setCartProducts] = useState([]);\n\n    const [totalProducts, setTotalProducts] = useState(0);\n\n    const [totalPrice, setTotalPrice] = useState(0);\n\n    useEffect(() => {\n        if (products) {\n            if (cartItems && cartItems.length) {\n                const res = cartItems.map((e) => {\n                    let product = products.find((product) => {\n                        if (\n                            slugify(product.name.toLowerCase()) === e.slug &&\n                            product.color === e.color &&\n                            product.capacity.includes(e.capacity)\n                        )\n                            return true;\n                        return false;\n                    });\n                    return {\n                        ...e,\n                        product: product,\n                    };\n                });\n                setCartProducts(res);\n            } else setCartProducts([]);\n        }\n        setTotalPrice(\n            cartItems.reduce((total, item) => total + Number(item.quantity) * Number(item.price), 0)\n        );\n        setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0));\n    }, [cartItems]);\n\n    return (\n        <Helmet title='Giỏ hàng'>\n            <div className='cart'>\n                <div className='cart__info'>\n                    <div className='cart__info__txt'>\n                        <p>Bạn đang có {totalProducts} sản phẩm trong giỏ hàng</p>\n                        <div className='cart__info__txt__price'>\n                            <span>Thành tiền:</span>{' '}\n                            <span>{numberWithCommas(Number(totalPrice))}</span>\n                        </div>\n                    </div>\n                    <div className='cart__info__btn'>\n                        <Link to='/payment'>\n                            <Button size='block'>Đặt hàng</Button>\n                        </Link>\n                        <Link to='/iphone'>\n                            <Button size='block'>Tiếp tục mua hàng</Button>\n                        </Link>\n                    </div>\n                </div>\n                <div className='cart__list'>\n                    {cartProducts.map((item, index) => (\n                        <CartItem item={item} key={index} />\n                    ))}\n                </div>\n            </div>\n        </Helmet>\n    );\n};\n\nexport default Cart;\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Home.jsx",["238"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport HeroSlider from '../components/HeroSlider'\r\nimport Section, { SectionTitle, SectionBody } from '../components/Section'\r\nimport PolicyCard from '../components/PolicyCard'\r\nimport Grid from '../components/Grid'\r\nimport ProductCard from '../components/ProductCard'\r\n\r\nimport policy from '../assets/fake-data/policy'\r\nimport banner1 from '../assets/images/banner1.jpg';\r\nimport banner2 from '../assets/images/banner2.png';\r\nimport banner3 from '../assets/images/banner3.webp';\r\nimport banner4 from '../assets/images/banner4.webp';\r\nimport banner5 from '../assets/images/banner5.webp';\r\nimport banner6 from '../assets/images/banner6.webp';\r\nimport {useQuery} from 'react-query';\r\nimport productApi from '../api/productApi'\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport slugify from 'slugify'\r\n\r\nconst Home = () => {\r\n    const [productData, setProductData] = useState([]);\r\n\r\n    const getProducts = count => {\r\n        if (productQuery.data) {\r\n            const max = productQuery.data.length - count\r\n            const min = 0\r\n            const start = Math.floor(Math.random() * (max - min) + min)\r\n            return productQuery.data.slice(start, start + count)\r\n        }\r\n        return [];\r\n    }\r\n    const fetchSliderData = async () => {\r\n        const res = await productApi.getSliderProduct();\r\n        return res.data;\r\n    };\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProduct();\r\n        return res.data;\r\n    }\r\n    const productQuery = useQuery('product', fetchProductData);\r\n    const sliderQuery = useQuery('productSlider', fetchSliderData);\r\n    useEffect(() => {\r\n        if (productQuery.data)\r\n            setProductData(productQuery.data.slice(-4));\r\n        else\r\n            setProductData([]);\r\n        console.log(productData);\r\n    }, [productQuery.data]);\r\n    if (productQuery.isLoading || sliderQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n    if (productQuery.isError) {\r\n        <div>{productQuery.error}</div>\r\n    }\r\n    if (sliderQuery.isError) {\r\n        <div>{sliderQuery.error}</div>\r\n    }\r\n    return (\r\n        <Helmet title=\"Trang chủ\">\r\n            {/* hero slider */}\r\n            <HeroSlider\r\n                data={sliderQuery.data || []}\r\n                control={true}\r\n                auto={false}\r\n                timeOut={5000}\r\n            />\r\n            {/* end hero slider */}\r\n\r\n            {/* policy section */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            policy.map((item, index) => <Link key={index} to=\"/policy\">\r\n                                <PolicyCard\r\n                                    name={item.name}\r\n                                    description={item.description}\r\n                                    icon={item.icon}\r\n                                />\r\n                            </Link>)\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end policy section */}\r\n\r\n            {/* best selling section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    top sản phẩm bán chạy trong tuần\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            productData.map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end best selling section */}\r\n            {/* banner 1 */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <div className='banner__group'>\r\n                        <Link to='/'>\r\n                            <img src={banner3} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner4} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner5} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner6} alt=\"\" />\r\n                        </Link>\r\n                    </div>\r\n                </SectionBody>\r\n            </Section>\r\n            {/** end banner1 */}\r\n            {/* new arrival section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    sản phẩm mới\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            getProducts(8).map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end new arrival section */}\r\n            \r\n            {/* banner */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <div className='banner__group'>\r\n                        <Link to=\"/catalog\">\r\n                            <img src={banner1} alt=\"\" />\r\n                        </Link>\r\n                        <Link to=\"/catalog\">\r\n                            <img src={banner2} alt=\"\" />\r\n                        </Link>\r\n                    </div>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end banner */}\r\n\r\n            {/* popular product section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    phổ biến\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            getProducts(12).map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end popular product section */}\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\numberWithCommas.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\category.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-color.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-size.js",[],["239","240"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\policy.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\hero-slider.js",[],["241","242"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\productApi.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Helmet.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductCard.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Section.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CheckBox.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\InfinityList.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CartItem.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\PolicyCard.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\HeroSlider.jsx",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\axiosClient.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\convertColor.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-capacity.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Pagination.jsx",["243","244"],[],"import React, {useState, useEffect} from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nexport default function Pagination({ itemsPerPage, items, products, setProducts }) {\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    console.log(products);\r\n    useEffect(() => {\r\n        // Fetch items from another resources.\r\n        const endOffset = itemOffset + itemsPerPage;\r\n        console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n        setCurrentItems(items.slice(itemOffset, endOffset));\r\n        setProducts(items.slice(itemOffset, endOffset));\r\n        setPageCount(Math.ceil(items.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected * itemsPerPage % items.length;\r\n        console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <ReactPaginate\r\n            nextLabel=\"next >\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={3}\r\n            marginPagesDisplayed={2}\r\n            pageCount={pageCount}\r\n            previousLabel=\"< previous\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextClassName=\"page-item\"\r\n            nextLinkClassName=\"page-link\"\r\n            breakLabel=\"...\"\r\n            breakClassName=\"page-item\"\r\n            breakLinkClassName=\"page-link\"\r\n            containerClassName=\"pagination\"\r\n            activeClassName=\"active\"\r\n            renderOnZeroPageCount={null}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IphoneCatalog.jsx",["245"],[],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport category from '../assets/fake-data/category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst IphoneCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('iphone');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default IphoneCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\WatchCatalog.jsx",["246"],[],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport category from '../assets/fake-data/watch-category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst WatchCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('watch');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default WatchCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IpadCatalog.jsx",["247","248"],[],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport productData from '../assets/fake-data/products'\r\nimport category from '../assets/fake-data/ipad-category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst IpadCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('ipad');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default IpadCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\watch-category.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\ipad-category.js",[],[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Payment.jsx",["249","250"],[],"import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport productApi from '../api/productApi';\nimport {useQuery} from 'react-query';\nimport slugify from 'slugify';\nimport orderBillApi from '../api/orderBillApi';\nimport {Form, Field, ErrorMessage, Formik} from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nimport {Redirect} from 'react-router-dom';\nimport {clearItem} from '../redux/shopping-cart/cartItemsSlide';\nimport {useDispatch} from 'react-redux';\n\nconst Payment = () => {\n    const dispatch = useDispatch();\n    const [products, setProducts] = useState([]);\n    const [isRedirect, setIsRedirect] = useState(false);\n    const fetchListData = async () => {\n        const res = await productApi.getListProduct();\n        return res.data;\n    };\n    const listProductQuery = useQuery('lstCartProduct', fetchListData);\n    useEffect(() => {\n        if (listProductQuery.data) {\n            setProducts(listProductQuery.data);\n        } else setProducts([]);\n    }, [listProductQuery.data]);\n    const cartItems = useSelector((state) => state.cartItems.value);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [cartProducts, setCartProducts] = useState([]);\n    useEffect(() => {\n        if (products) {\n            if (cartItems && cartItems.length) {\n                const res = cartItems.map((e) => {\n                    let product = products.find((product) => {\n                        if (\n                            slugify(product.name.toLowerCase()) === e.slug &&\n                            product.color === e.color &&\n                            product.capacity.includes(e.capacity)\n                        )\n                            return true;\n                        return false;\n                    });\n                    return {\n                        ...e,\n                        product: product,\n                    };\n                });\n                setCartProducts(res);\n            } else setCartProducts([]);\n        }\n        setTotalPrice(\n            cartItems.reduce((total, item) => total + Number(item.quantity) * Number(item.price), 0)\n        );\n    }, [products]);\n\n    const handleSubmit = async (value) => {\n        const prods = cartProducts.map((e) => {\n            return {\n                id: e.product.id,\n                price: e.price,\n                quantity: e.quantity,\n                color: e.color,\n                capacity: e.capacity + 'GB',\n            };\n        });\n        const params = {\n            ...value,\n            products: prods,\n        };\n        console.log(params);\n        const res = await orderBillApi.createdOrder(params);\n        if (res.success) {\n            Swal.fire(\n                'Success',\n                'Your order has been successfully placed. Thank U',\n                'success'\n            ).then((res) => {\n                if (res.isConfirmed) {\n                    dispatch(clearItem());\n                    setIsRedirect(true);\n                }\n            });\n        } else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops... Sorry',\n                text: 'Something went wrong!',\n            });\n        }\n    };\n\n    if (isRedirect) return <Redirect to='/' />;\n\n    return (\n        <div className='payment__container'>\n            <section className='checkout'>\n                <h2 className='section-heading'>Thanh Toán</h2>\n                <Formik\n                    initialValues={{\n                        name: '',\n                        email: '',\n                        phoneNumber: '',\n                        address: '',\n                        note: '',\n                    }}\n                    validationSchema={Yup.object({\n                        name: Yup.string()\n                            .min(6, 'must be 6 character or than')\n                            .required('Required'),\n                        email: Yup.string().email('Must be email').required('Required'),\n                        phoneNumber: Yup.string()\n                            .min(10, 'must be 10 character or than')\n                            .required('Required'),\n                        address: Yup.string()\n                            .min(6, 'must be 6 character or than')\n                            .required('Required'),\n                    })}\n                    onSubmit={(value) => handleSubmit(value)}\n                >\n                    <Form className='payment-form'>\n                        <div className='payment-method'>\n                            <button className='method selected'>\n                                <div className='method__group'>\n                                    <ion-icon name='card'></ion-icon>\n                                    <span>Thanh toán khi nhận hàng</span>\n                                </div>\n\n                                <ion-icon\n                                    className='checkmark fill'\n                                    name='checkmark-circle'\n                                ></ion-icon>\n                            </button>\n\n                            <button className='method'>\n                                <div className='method__group'>\n                                    <ion-icon name='logo-paypal'></ion-icon>\n\n                                    <span>VN Pay</span>\n                                </div>\n\n                                <ion-icon\n                                    className='checkmark'\n                                    name='checkmark-circle-outline'\n                                ></ion-icon>\n                            </button>\n                        </div>\n\n                        <div className='cart__group__input'>\n                            <div className='cardholder-name'>\n                                <label htmlFor='cardholder-name' className='label-default'>\n                                    Họ và tên\n                                </label>\n                                <Field type='text' name='name' className='input-default' />\n                                <div className='error-message'>\n                                    <ErrorMessage name='name' />\n                                </div>\n                            </div>\n\n                            <div className='card-number'>\n                                <label htmlFor='card-number' className='label-default'>\n                                    Email\n                                </label>\n                                <Field type='email' name='email' className='input-default' />\n                                <div className='error-message'>\n                                    <ErrorMessage name='email' />\n                                </div>\n                            </div>\n                            <div className='card-number'>\n                                <label htmlFor='card-number' className='label-default'>\n                                    Số điện thoại\n                                </label>\n                                <Field type='text' name='phoneNumber' className='input-default' />\n                                <div className='error-message'>\n                                    <ErrorMessage name='phoneNumber' />\n                                </div>\n                            </div>\n                            <div className='card-number'>\n                                <label htmlFor='card-number' className='label-default'>\n                                    Địa chỉ\n                                </label>\n                                <Field type='text' name='address' className='input-default' />\n                                <div className='error-message'>\n                                    <ErrorMessage name='address' />\n                                </div>\n                            </div>\n                            <div className='card-number'>\n                                <label htmlFor='card-number' className='label-default'>\n                                    Ghi chú\n                                </label>\n                                <Field type='text' name='note' className='input-default' />\n                                <div className='error-message'>\n                                    <ErrorMessage name='note' />\n                                </div>\n                            </div>\n                        </div>\n                        <button type='submit' className='btn btn-primary'>\n                            <span id='payAmount'>Đặt Hàng</span>\n                        </button>\n                    </Form>\n                </Formik>\n            </section>\n            <div className='cart'>\n                <div className='cart__info'>\n                    <h2>Tóm tắt đơn hàng</h2>\n                    <div className='cart__info__txt'>\n                        {cartProducts.map((cartProduct) => {\n                            if (cartProduct.product)\n                                return (\n                                    <div\n                                        key={cartProduct.product.id}\n                                        className='cart__info__txt__product'\n                                    >\n                                        <span>{`${cartProduct.quantity}x ${cartProduct.product.name} ${cartProduct.product.color} ${cartProduct.product.capacity}`}</span>{' '}\n                                        <span>\n                                            {(\n                                                cartProduct.quantity * cartProduct.product.price\n                                            ).toLocaleString('vi-VN', {\n                                                style: 'currency',\n                                                currency: 'VND',\n                                            })}\n                                        </span>\n                                    </div>\n                                );\n                        })}\n                        <hr />\n                        <div className='cart__info__txt__price'>\n                            <span>Tổng đơn hàng:</span>{' '}\n                            <span>\n                                {totalPrice.toLocaleString('vi-VN', {\n                                    style: 'currency',\n                                    currency: 'VND',\n                                })}\n                            </span>\n                        </div>\n                        <div className='cart__info__txt__price'>\n                            <span>Phí giao hàng:</span>{' '}\n                            <span>\n                                {Number(50000).toLocaleString('vi-VN', {\n                                    style: 'currency',\n                                    currency: 'VND',\n                                })}\n                            </span>\n                        </div>\n                        <div className='cart__info__txt__price'>\n                            <span>Tổng thanh toán:</span>{' '}\n                            <span>\n                                {(totalPrice + 50000).toLocaleString('vi-VN', {\n                                    style: 'currency',\n                                    currency: 'VND',\n                                })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Payment;\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\orderBillApi.js",[],[],{"ruleId":"251","severity":1,"message":"252","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":19},{"ruleId":"251","severity":1,"message":"255","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":55,"column":8,"nodeType":"258","endLine":55,"endColumn":50,"suggestions":"259"},{"ruleId":"251","severity":1,"message":"252","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":19},{"ruleId":"251","severity":1,"message":"260","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":18},{"ruleId":"256","severity":1,"message":"261","line":50,"column":8,"nodeType":"258","endLine":50,"endColumn":18,"suggestions":"262"},{"ruleId":"256","severity":1,"message":"263","line":83,"column":8,"nodeType":"258","endLine":83,"endColumn":19,"suggestions":"264"},{"ruleId":"256","severity":1,"message":"265","line":51,"column":8,"nodeType":"258","endLine":51,"endColumn":27,"suggestions":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"267","replacedBy":"271"},{"ruleId":"269","replacedBy":"272"},{"ruleId":"251","severity":1,"message":"273","line":4,"column":12,"nodeType":"253","messageId":"254","endLine":4,"endColumn":24},{"ruleId":"256","severity":1,"message":"274","line":15,"column":8,"nodeType":"258","endLine":15,"endColumn":34,"suggestions":"275"},{"ruleId":"251","severity":1,"message":"260","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":18},{"ruleId":"251","severity":1,"message":"260","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":19},{"ruleId":"251","severity":1,"message":"260","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":18},{"ruleId":"256","severity":1,"message":"261","line":55,"column":8,"nodeType":"258","endLine":55,"endColumn":18,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":207,"column":57,"nodeType":"279","messageId":"280","endLine":207,"endColumn":59},"no-unused-vars","'productData' is defined but never used.","Identifier","unusedVar","'slugify' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initProduct'. Either include it or remove the dependency array.","ArrayExpression",["281"],"'Pagination' is defined but never used.","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'productData'. Either include it or remove the dependency array.",["284"],"no-native-reassign",["285"],"no-negated-in-lhs",["286"],["285"],["286"],"'currentItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'items' and 'setProducts'. Either include them or remove the dependency array. If 'setProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],["288"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"291","fix":"293"},{"desc":"294","fix":"295"},"no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"291","fix":"298"},"Update the dependencies array to be: [initProduct, listProductQuery.data, productQuery.data]",{"range":"299","text":"300"},"Update the dependencies array to be: [cartItems, products]",{"range":"301","text":"302"},{"range":"303","text":"302"},"Update the dependencies array to be: [productData, productQuery.data]",{"range":"304","text":"305"},"Update the dependencies array to be: [itemOffset, items, itemsPerPage, setProducts]",{"range":"306","text":"307"},{"range":"308","text":"302"},[1731,1773],"[initProduct, listProductQuery.data, productQuery.data]",[1731,1741],"[cartItems, products]",[2955,2966],[1967,1986],"[productData, productQuery.data]",[766,792],"[itemOffset, items, itemsPerPage, setProducts]",[2180,2190]]