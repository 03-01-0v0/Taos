[{"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\store.js":"2","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Layout.jsx":"4","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\product-modal\\productModalSlice.js":"5","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\shopping-cart\\cartItemsSlide.js":"6","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductViewModal.jsx":"7","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Header.jsx":"8","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Footer.jsx":"9","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\routes\\Routes.jsx":"10","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\products.js":"11","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Button.jsx":"12","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductView.jsx":"13","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Grid.jsx":"14","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Product.jsx":"15","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Catalog.jsx":"16","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Cart.jsx":"17","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Home.jsx":"18","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\numberWithCommas.js":"19","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\category.js":"20","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-color.js":"21","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-size.js":"22","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\policy.js":"23","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\hero-slider.js":"24","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\productApi.js":"25","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Helmet.jsx":"26","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductCard.jsx":"27","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Section.jsx":"28","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CheckBox.jsx":"29","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\InfinityList.jsx":"30","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CartItem.jsx":"31","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\PolicyCard.jsx":"32","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\HeroSlider.jsx":"33","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\axiosClient.js":"34","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\convertColor.js":"35","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-capacity.js":"36","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Pagination.jsx":"37","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IphoneCatalog.jsx":"38","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\WatchCatalog.jsx":"39","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IpadCatalog.jsx":"40","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\watch-category.js":"41","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\ipad-category.js":"42"},{"size":916,"mtime":1670744903506,"results":"43","hashOfConfig":"44"},{"size":335,"mtime":1669032299728,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1669032299728,"results":"46","hashOfConfig":"44"},{"size":782,"mtime":1669032299725,"results":"47","hashOfConfig":"44"},{"size":550,"mtime":1669032299727,"results":"48","hashOfConfig":"44"},{"size":2925,"mtime":1670896680498,"results":"49","hashOfConfig":"44"},{"size":1236,"mtime":1669032299726,"results":"50","hashOfConfig":"44"},{"size":3615,"mtime":1670844774993,"results":"51","hashOfConfig":"44"},{"size":4042,"mtime":1670741636560,"results":"52","hashOfConfig":"44"},{"size":802,"mtime":1670866963434,"results":"53","hashOfConfig":"44"},{"size":72791,"mtime":1669032299647,"results":"54","hashOfConfig":"44"},{"size":996,"mtime":1670761081678,"results":"55","hashOfConfig":"44"},{"size":8604,"mtime":1670871710701,"results":"56","hashOfConfig":"44"},{"size":682,"mtime":1669032299724,"results":"57","hashOfConfig":"44"},{"size":3450,"mtime":1670871043435,"results":"58","hashOfConfig":"44"},{"size":8417,"mtime":1670844689894,"results":"59","hashOfConfig":"44"},{"size":3460,"mtime":1670899681532,"results":"60","hashOfConfig":"44"},{"size":8456,"mtime":1670862081307,"results":"61","hashOfConfig":"44"},{"size":121,"mtime":1669032299732,"results":"62","hashOfConfig":"44"},{"size":485,"mtime":1670829696624,"results":"63","hashOfConfig":"44"},{"size":563,"mtime":1670860357909,"results":"64","hashOfConfig":"44"},{"size":331,"mtime":1669032299647,"results":"65","hashOfConfig":"44"},{"size":649,"mtime":1669032299646,"results":"66","hashOfConfig":"44"},{"size":1841,"mtime":1669032299646,"results":"67","hashOfConfig":"44"},{"size":611,"mtime":1670862330943,"results":"68","hashOfConfig":"44"},{"size":392,"mtime":1669280516076,"results":"69","hashOfConfig":"44"},{"size":1882,"mtime":1670862089502,"results":"70","hashOfConfig":"44"},{"size":494,"mtime":1669032299726,"results":"71","hashOfConfig":"44"},{"size":732,"mtime":1669032299724,"results":"72","hashOfConfig":"44"},{"size":2467,"mtime":1670862172259,"results":"73","hashOfConfig":"44"},{"size":3364,"mtime":1670899639733,"results":"74","hashOfConfig":"44"},{"size":795,"mtime":1669032299725,"results":"75","hashOfConfig":"44"},{"size":3483,"mtime":1670762356246,"results":"76","hashOfConfig":"44"},{"size":913,"mtime":1670750866727,"results":"77","hashOfConfig":"44"},{"size":265,"mtime":1670758347762,"results":"78","hashOfConfig":"44"},{"size":322,"mtime":1670829404472,"results":"79","hashOfConfig":"44"},{"size":1837,"mtime":1670841314209,"results":"80","hashOfConfig":"44"},{"size":8205,"mtime":1670860270566,"results":"81","hashOfConfig":"44"},{"size":8208,"mtime":1670859821952,"results":"82","hashOfConfig":"44"},{"size":8260,"mtime":1670860290492,"results":"83","hashOfConfig":"44"},{"size":297,"mtime":1670860755510,"results":"84","hashOfConfig":"44"},{"size":371,"mtime":1670860735501,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1eaxrp7",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\index.js",[],["179","180"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\store.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Layout.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\product-modal\\productModalSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\redux\\shopping-cart\\cartItemsSlide.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductViewModal.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Header.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Footer.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\routes\\Routes.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\products.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Button.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductView.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Grid.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Product.jsx",["181","182"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport Section, {SectionBody, SectionTitle} from '../components/Section'\r\nimport Grid from '../components/Grid'\r\nimport ProductCard from '../components/ProductCard'\r\nimport ProductView from '../components/ProductView'\r\n\r\nimport productData from '../assets/fake-data/products'\r\nimport { useQuery } from 'react-query'\r\nimport productApi from '../api/productApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport slugify from 'slugify'\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\n\r\nconst Product = props => {\r\n    \r\n    const {id} = useParams();\r\n    const fetchData = async () => {\r\n        const res = await productApi.getProductById(id);\r\n        return res.data;\r\n    }\r\n\r\n    const fetchListData = async () => {\r\n        const res = await productApi.getListProduct();\r\n        return res.data;\r\n    };\r\n\r\n    const initProduct = {\r\n        id: '',\r\n        code: '',\r\n        capacity: '',\r\n        color: '',\r\n        description: '',\r\n        shortDescription: '',\r\n        img: ['1', '2'],\r\n        isShell: '',\r\n        name: '',\r\n        price: '',\r\n        purchasePrice: '',\r\n        quantity: '',\r\n        uniId: ''\r\n    }\r\n\r\n    const [product, setProduct] = useState(initProduct);\r\n    const [relatedProducts, setRelatedProducts] = useState([]);\r\n    const productQuery = useQuery(`product-${id}`, fetchData);\r\n    const listProductQuery = useQuery('relatedProduct', fetchListData);\r\n    useEffect(() => {\r\n        if (productQuery.data && listProductQuery.data) {\r\n            setProduct(productQuery.data);\r\n            setRelatedProducts(listProductQuery.data.slice(-8));\r\n        } else {\r\n            setProduct(initProduct);\r\n            setRelatedProducts([]);\r\n        }\r\n    }, [listProductQuery.data, productQuery.data]);\r\n\r\n    React.useEffect(() => {\r\n        window.scrollTo(0,0)\r\n    }, [product])\r\n    if (productQuery.isLoading) {\r\n        return <ClipLoader color={'#427782'}/>\r\n    } else \r\n    return (\r\n        <Helmet title={product.shortDescription}>\r\n            <Section>\r\n                <SectionBody>\r\n                    <ProductView product={product}/>\r\n                </SectionBody>\r\n            </Section>\r\n            <Section>\r\n                <SectionTitle>\r\n                    Khám phá thêm\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            relatedProducts.map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />   \r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Catalog.jsx",["183","184"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Cart.jsx",["185"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\Home.jsx",["186"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport HeroSlider from '../components/HeroSlider'\r\nimport Section, { SectionTitle, SectionBody } from '../components/Section'\r\nimport PolicyCard from '../components/PolicyCard'\r\nimport Grid from '../components/Grid'\r\nimport ProductCard from '../components/ProductCard'\r\n\r\nimport policy from '../assets/fake-data/policy'\r\nimport banner1 from '../assets/images/banner1.jpg';\r\nimport banner2 from '../assets/images/banner2.png';\r\nimport banner3 from '../assets/images/banner3.webp';\r\nimport banner4 from '../assets/images/banner4.webp';\r\nimport banner5 from '../assets/images/banner5.webp';\r\nimport banner6 from '../assets/images/banner6.webp';\r\nimport {useQuery} from 'react-query';\r\nimport productApi from '../api/productApi'\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport slugify from 'slugify'\r\n\r\nconst Home = () => {\r\n    const [productData, setProductData] = useState([]);\r\n\r\n    const getProducts = count => {\r\n        if (productQuery.data) {\r\n            const max = productQuery.data.length - count\r\n            const min = 0\r\n            const start = Math.floor(Math.random() * (max - min) + min)\r\n            return productQuery.data.slice(start, start + count)\r\n        }\r\n        return [];\r\n    }\r\n    const fetchSliderData = async () => {\r\n        const res = await productApi.getSliderProduct();\r\n        return res.data;\r\n    };\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProduct();\r\n        return res.data;\r\n    }\r\n    const productQuery = useQuery('product', fetchProductData);\r\n    const sliderQuery = useQuery('productSlider', fetchSliderData);\r\n    useEffect(() => {\r\n        if (productQuery.data)\r\n            setProductData(productQuery.data.slice(-4));\r\n        else\r\n            setProductData([]);\r\n        console.log(productData);\r\n    }, [productQuery.data]);\r\n    if (productQuery.isLoading || sliderQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n    if (productQuery.isError) {\r\n        <div>{productQuery.error}</div>\r\n    }\r\n    if (sliderQuery.isError) {\r\n        <div>{sliderQuery.error}</div>\r\n    }\r\n    return (\r\n        <Helmet title=\"Trang chủ\">\r\n            {/* hero slider */}\r\n            <HeroSlider\r\n                data={sliderQuery.data || []}\r\n                control={true}\r\n                auto={false}\r\n                timeOut={5000}\r\n            />\r\n            {/* end hero slider */}\r\n\r\n            {/* policy section */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            policy.map((item, index) => <Link key={index} to=\"/policy\">\r\n                                <PolicyCard\r\n                                    name={item.name}\r\n                                    description={item.description}\r\n                                    icon={item.icon}\r\n                                />\r\n                            </Link>)\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end policy section */}\r\n\r\n            {/* best selling section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    top sản phẩm bán chạy trong tuần\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            productData.map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end best selling section */}\r\n            {/* banner 1 */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <div className='banner__group'>\r\n                        <Link to='/'>\r\n                            <img src={banner3} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner4} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner5} alt=\"\" />\r\n                        </Link>\r\n                        <Link to='/'>\r\n                            <img src={banner6} alt=\"\" />\r\n                        </Link>\r\n                    </div>\r\n                </SectionBody>\r\n            </Section>\r\n            {/** end banner1 */}\r\n            {/* new arrival section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    sản phẩm mới\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            getProducts(8).map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end new arrival section */}\r\n            \r\n            {/* banner */}\r\n            <Section>\r\n                <SectionBody>\r\n                    <div className='banner__group'>\r\n                        <Link to=\"/catalog\">\r\n                            <img src={banner1} alt=\"\" />\r\n                        </Link>\r\n                        <Link to=\"/catalog\">\r\n                            <img src={banner2} alt=\"\" />\r\n                        </Link>\r\n                    </div>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end banner */}\r\n\r\n            {/* popular product section */}\r\n            <Section>\r\n                <SectionTitle>\r\n                    phổ biến\r\n                </SectionTitle>\r\n                <SectionBody>\r\n                    <Grid\r\n                        col={4}\r\n                        mdCol={2}\r\n                        smCol={1}\r\n                        gap={20}\r\n                    >\r\n                        {\r\n                            getProducts(12).map((item, index) => (\r\n                                <ProductCard\r\n                                    key={index}\r\n                                    img01={item.img[0]}\r\n                                    img02={item.img.length < 2 ? item.img[0] : item.img[1]}\r\n                                    name={item.name + ' ' + item.capacity}\r\n                                    price={Number(item.price)}\r\n                                    slug={slugify(item.name.toLowerCase())}\r\n                                    idx={item.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </SectionBody>\r\n            </Section>\r\n            {/* end popular product section */}\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\numberWithCommas.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\category.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-color.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-size.js",[],["187","188"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\policy.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\hero-slider.js",[],["189","190"],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\productApi.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Helmet.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\ProductCard.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Section.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CheckBox.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\InfinityList.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\CartItem.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\PolicyCard.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\HeroSlider.jsx",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\api\\axiosClient.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\utils\\convertColor.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\product-capacity.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\components\\Pagination.jsx",["191","192"],"import React, {useState, useEffect} from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nexport default function Pagination({ itemsPerPage, items, products, setProducts }) {\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    console.log(products);\r\n    useEffect(() => {\r\n        // Fetch items from another resources.\r\n        const endOffset = itemOffset + itemsPerPage;\r\n        console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n        setCurrentItems(items.slice(itemOffset, endOffset));\r\n        setProducts(items.slice(itemOffset, endOffset));\r\n        setPageCount(Math.ceil(items.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = event.selected * itemsPerPage % items.length;\r\n        console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <ReactPaginate\r\n            nextLabel=\"next >\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={3}\r\n            marginPagesDisplayed={2}\r\n            pageCount={pageCount}\r\n            previousLabel=\"< previous\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextClassName=\"page-item\"\r\n            nextLinkClassName=\"page-link\"\r\n            breakLabel=\"...\"\r\n            breakClassName=\"page-item\"\r\n            breakLinkClassName=\"page-link\"\r\n            containerClassName=\"pagination\"\r\n            activeClassName=\"active\"\r\n            renderOnZeroPageCount={null}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IphoneCatalog.jsx",["193"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport category from '../assets/fake-data/category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst IphoneCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('iphone');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default IphoneCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\WatchCatalog.jsx",["194"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport category from '../assets/fake-data/watch-category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst WatchCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('watch');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default WatchCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\pages\\IpadCatalog.jsx",["195","196"],"import React, { useCallback, useState, useEffect, useRef } from 'react'\r\n\r\nimport Helmet from '../components/Helmet'\r\nimport CheckBox from '../components/CheckBox'\r\n\r\nimport productData from '../assets/fake-data/products'\r\nimport category from '../assets/fake-data/ipad-category'\r\nimport colors from '../assets/fake-data/product-color'\r\nimport capacity from '../assets/fake-data/product-capacity';\r\nimport Button from '../components/Button'\r\nimport InfinityList from '../components/InfinityList'\r\nimport { useQuery } from 'react-query';\r\nimport productApi from '../api/productApi';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport slugify from 'slugify'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst IpadCatalog = () => {\r\n\r\n    const initFilter = {\r\n        category: [],\r\n        color: [],\r\n        capacity: []\r\n    }\r\n\r\n    const fetchProductData = async () => {\r\n        const res = await productApi.getListProductByName('ipad');\r\n        return res.data;\r\n    }\r\n\r\n    const productQuery = useQuery('product', fetchProductData);\r\n\r\n    \r\n    const [productList, setProductList] = useState([]);\r\n    \r\n    const [products, setProducts] = useState(productList);\r\n\r\n    useEffect(() => {\r\n        if (productQuery.data) {\r\n            setProductList(productQuery.data);\r\n            setProducts(productQuery.data);\r\n        }\r\n        else {\r\n            setProductList([]);\r\n            setProducts([]);\r\n        }\r\n    }, [productQuery.data]);\r\n\r\n    const [filter, setFilter] = useState(initFilter)\r\n\r\n    const filterSelect = (type, checked, item) => {\r\n        if (checked) {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\r\n                    break\r\n                case \"COLOR\":\r\n                    setFilter({...filter, color: [...filter.color, item.color]})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    setFilter({...filter, capacity: [...filter.capacity, item.capacity]})\r\n                    break\r\n                default:\r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case \"CATEGORY\":\r\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\r\n                    setFilter({...filter, category: newCategory})\r\n                    break\r\n                case \"COLOR\":\r\n                    const newColor = filter.color.filter(e => e !== item.color)\r\n                    setFilter({...filter, color: newColor})\r\n                    break\r\n                case \"CAPACITY\":\r\n                    const newCapacity = filter.capacity.filter(e => e !== item.capacity)\r\n                    console.log(newCapacity);\r\n                    setFilter({...filter, capacity: newCapacity})\r\n                    break\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => setFilter(initFilter)\r\n\r\n    const updateProducts = useCallback(\r\n        () => {\r\n            let temp = productList\r\n\r\n            if (filter.category.length > 0) {\r\n                temp = temp.filter(e => filter.category.includes(slugify(e.name.toLowerCase())))\r\n            }\r\n\r\n            if (filter.color.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check =  filter.color.includes(e.color);\r\n                    return check;\r\n                })\r\n            }\r\n\r\n            if (filter.capacity.length > 0) {\r\n                temp = temp.filter(e => {\r\n                    const check = filter.capacity.includes(e.capacity);\r\n                    return check;\r\n                })\r\n            }\r\n            setProducts(temp)\r\n        },\r\n        [filter, productList],\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateProducts()\r\n    }, [updateProducts])\r\n\r\n    const filterRef = useRef(null)\r\n\r\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\r\n\r\n    \r\n\r\n    if (productQuery.isLoading) {\r\n        <ClipLoader color={'#427782'}/>\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Sản phẩm\">\r\n            <div className=\"catalog\">\r\n                <div className=\"catalog__filter\" ref={filterRef}>\r\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\r\n                        <i className=\"bx bx-left-arrow-alt\"></i>\r\n                    </div>\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            danh mục sản phẩm\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                category.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\r\n                                            checked={filter.category.includes(item.categorySlug)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            màu sắc\r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                colors.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\r\n                                            checked={filter.color.includes(item.color)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__title\">\r\n                            dung lượng \r\n                        </div>\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            {\r\n                                capacity.map((item, index) => (\r\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\r\n                                        <CheckBox\r\n                                            label={item.display}\r\n                                            onChange={(input) => filterSelect(\"CAPACITY\", input.checked, item)}\r\n                                            checked={filter.capacity.includes(item.capacity)}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"catalog__filter__widget\">\r\n                        <div className=\"catalog__filter__widget__content\">\r\n                            <Button size=\"sm\" onClick={clearFilter}>xóa bộ lọc</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"catalog__filter__toggle\">\r\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>bộ lọc</Button>\r\n                </div>\r\n                <div className=\"catalog__content\">\r\n                    <InfinityList\r\n                        data={products}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default IpadCatalog\r\n","C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\watch-category.js",[],"C:\\Users\\ADMIN\\Desktop\\Taos\\Frontend\\src\\assets\\fake-data\\ipad-category.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":57,"column":8,"nodeType":"207","endLine":57,"endColumn":50,"suggestions":"208"},{"ruleId":"201","severity":1,"message":"202","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":19},{"ruleId":"201","severity":1,"message":"209","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":18},{"ruleId":"205","severity":1,"message":"210","line":47,"column":8,"nodeType":"207","endLine":47,"endColumn":18,"suggestions":"211"},{"ruleId":"205","severity":1,"message":"212","line":51,"column":8,"nodeType":"207","endLine":51,"endColumn":27,"suggestions":"213"},{"ruleId":"197","replacedBy":"214"},{"ruleId":"199","replacedBy":"215"},{"ruleId":"197","replacedBy":"216"},{"ruleId":"199","replacedBy":"217"},{"ruleId":"201","severity":1,"message":"218","line":4,"column":12,"nodeType":"203","messageId":"204","endLine":4,"endColumn":24},{"ruleId":"205","severity":1,"message":"219","line":15,"column":8,"nodeType":"207","endLine":15,"endColumn":34,"suggestions":"220"},{"ruleId":"201","severity":1,"message":"209","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":18},{"ruleId":"201","severity":1,"message":"209","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":19},{"ruleId":"201","severity":1,"message":"209","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":18},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'productData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initProduct'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'Pagination' is defined but never used.","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'productData'. Either include it or remove the dependency array.",["225"],["221"],["222"],["221"],["222"],"'currentItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'items' and 'setProducts'. Either include them or remove the dependency array. If 'setProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [initProduct, listProductQuery.data, productQuery.data]",{"range":"235","text":"236"},"Update the dependencies array to be: [cartItems, products]",{"range":"237","text":"238"},"Update the dependencies array to be: [productData, productQuery.data]",{"range":"239","text":"240"},"Update the dependencies array to be: [itemOffset, items, itemsPerPage, setProducts]",{"range":"241","text":"242"},[1809,1851],"[initProduct, listProductQuery.data, productQuery.data]",[1547,1557],"[cartItems, products]",[1967,1986],"[productData, productQuery.data]",[766,792],"[itemOffset, items, itemsPerPage, setProducts]"]